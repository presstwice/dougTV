import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  IvsClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../IvsClient";
import { GetStreamKeyRequest, GetStreamKeyResponse } from "../models/models_0";
export { __MetadataBearer, $Command };
export interface GetStreamKeyCommandInput extends GetStreamKeyRequest {}
export interface GetStreamKeyCommandOutput
  extends GetStreamKeyResponse,
    __MetadataBearer {}
export declare class GetStreamKeyCommand extends $Command<
  GetStreamKeyCommandInput,
  GetStreamKeyCommandOutput,
  IvsClientResolvedConfig
> {
  readonly input: GetStreamKeyCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: GetStreamKeyCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: IvsClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<GetStreamKeyCommandInput, GetStreamKeyCommandOutput>;
  private serialize;
  private deserialize;
}
