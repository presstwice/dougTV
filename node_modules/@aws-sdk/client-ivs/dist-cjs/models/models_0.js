"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PutMetadataRequestFilterSensitiveLog = exports.GetStreamKeyResponseFilterSensitiveLog = exports.CreateStreamKeyResponseFilterSensitiveLog = exports.CreateChannelResponseFilterSensitiveLog = exports.BatchGetStreamKeyResponseFilterSensitiveLog = exports.StreamKeyFilterSensitiveLog = exports.StreamUnavailable = exports.StreamState = exports.StreamHealth = exports.ChannelNotBroadcasting = exports.InternalServerException = exports.RecordingConfigurationState = exports.ThumbnailConfigurationStorage = exports.ThumbnailConfigurationResolution = exports.RecordingMode = exports.RenditionConfigurationRenditionSelection = exports.RenditionConfigurationRendition = exports.ConflictException = exports.ServiceQuotaExceededException = exports.ResourceNotFoundException = exports.ValidationException = exports.ThrottlingException = exports.PendingVerification = exports.ChannelType = exports.TranscodePreset = exports.ChannelLatencyMode = exports.AccessDeniedException = void 0;
const smithy_client_1 = require("@smithy/smithy-client");
const IvsServiceException_1 = require("./IvsServiceException");
class AccessDeniedException extends IvsServiceException_1.IvsServiceException {
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessDeniedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
        this.exceptionMessage = opts.exceptionMessage;
    }
}
exports.AccessDeniedException = AccessDeniedException;
exports.ChannelLatencyMode = {
    LowLatency: "LOW",
    NormalLatency: "NORMAL",
};
exports.TranscodePreset = {
    ConstrainedBandwidthTranscodePreset: "CONSTRAINED_BANDWIDTH_DELIVERY",
    HigherBandwidthTranscodePreset: "HIGHER_BANDWIDTH_DELIVERY",
};
exports.ChannelType = {
    AdvancedHDChannelType: "ADVANCED_HD",
    AdvancedSDChannelType: "ADVANCED_SD",
    BasicChannelType: "BASIC",
    StandardChannelType: "STANDARD",
};
class PendingVerification extends IvsServiceException_1.IvsServiceException {
    constructor(opts) {
        super({
            name: "PendingVerification",
            $fault: "client",
            ...opts,
        });
        this.name = "PendingVerification";
        this.$fault = "client";
        Object.setPrototypeOf(this, PendingVerification.prototype);
        this.exceptionMessage = opts.exceptionMessage;
    }
}
exports.PendingVerification = PendingVerification;
class ThrottlingException extends IvsServiceException_1.IvsServiceException {
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        this.name = "ThrottlingException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ThrottlingException.prototype);
        this.exceptionMessage = opts.exceptionMessage;
    }
}
exports.ThrottlingException = ThrottlingException;
class ValidationException extends IvsServiceException_1.IvsServiceException {
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ValidationException.prototype);
        this.exceptionMessage = opts.exceptionMessage;
    }
}
exports.ValidationException = ValidationException;
class ResourceNotFoundException extends IvsServiceException_1.IvsServiceException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.exceptionMessage = opts.exceptionMessage;
    }
}
exports.ResourceNotFoundException = ResourceNotFoundException;
class ServiceQuotaExceededException extends IvsServiceException_1.IvsServiceException {
    constructor(opts) {
        super({
            name: "ServiceQuotaExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "ServiceQuotaExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ServiceQuotaExceededException.prototype);
        this.exceptionMessage = opts.exceptionMessage;
    }
}
exports.ServiceQuotaExceededException = ServiceQuotaExceededException;
class ConflictException extends IvsServiceException_1.IvsServiceException {
    constructor(opts) {
        super({
            name: "ConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConflictException.prototype);
        this.exceptionMessage = opts.exceptionMessage;
    }
}
exports.ConflictException = ConflictException;
exports.RenditionConfigurationRendition = {
    FULL_HD: "FULL_HD",
    HD: "HD",
    LOWEST_RESOLUTION: "LOWEST_RESOLUTION",
    SD: "SD",
};
exports.RenditionConfigurationRenditionSelection = {
    ALL: "ALL",
    CUSTOM: "CUSTOM",
    NONE: "NONE",
};
exports.RecordingMode = {
    Disabled: "DISABLED",
    Interval: "INTERVAL",
};
exports.ThumbnailConfigurationResolution = {
    FULL_HD: "FULL_HD",
    HD: "HD",
    LOWEST_RESOLUTION: "LOWEST_RESOLUTION",
    SD: "SD",
};
exports.ThumbnailConfigurationStorage = {
    LATEST: "LATEST",
    SEQUENTIAL: "SEQUENTIAL",
};
exports.RecordingConfigurationState = {
    Active: "ACTIVE",
    CreateFailed: "CREATE_FAILED",
    Creating: "CREATING",
};
class InternalServerException extends IvsServiceException_1.IvsServiceException {
    constructor(opts) {
        super({
            name: "InternalServerException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServerException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalServerException.prototype);
        this.exceptionMessage = opts.exceptionMessage;
    }
}
exports.InternalServerException = InternalServerException;
class ChannelNotBroadcasting extends IvsServiceException_1.IvsServiceException {
    constructor(opts) {
        super({
            name: "ChannelNotBroadcasting",
            $fault: "client",
            ...opts,
        });
        this.name = "ChannelNotBroadcasting";
        this.$fault = "client";
        Object.setPrototypeOf(this, ChannelNotBroadcasting.prototype);
        this.exceptionMessage = opts.exceptionMessage;
    }
}
exports.ChannelNotBroadcasting = ChannelNotBroadcasting;
exports.StreamHealth = {
    Starving: "STARVING",
    StreamHealthy: "HEALTHY",
    Unknown: "UNKNOWN",
};
exports.StreamState = {
    StreamLive: "LIVE",
    StreamOffline: "OFFLINE",
};
class StreamUnavailable extends IvsServiceException_1.IvsServiceException {
    constructor(opts) {
        super({
            name: "StreamUnavailable",
            $fault: "server",
            ...opts,
        });
        this.name = "StreamUnavailable";
        this.$fault = "server";
        Object.setPrototypeOf(this, StreamUnavailable.prototype);
        this.exceptionMessage = opts.exceptionMessage;
    }
}
exports.StreamUnavailable = StreamUnavailable;
const StreamKeyFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.value && { value: smithy_client_1.SENSITIVE_STRING }),
});
exports.StreamKeyFilterSensitiveLog = StreamKeyFilterSensitiveLog;
const BatchGetStreamKeyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.streamKeys && { streamKeys: obj.streamKeys.map((item) => (0, exports.StreamKeyFilterSensitiveLog)(item)) }),
});
exports.BatchGetStreamKeyResponseFilterSensitiveLog = BatchGetStreamKeyResponseFilterSensitiveLog;
const CreateChannelResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.streamKey && { streamKey: (0, exports.StreamKeyFilterSensitiveLog)(obj.streamKey) }),
});
exports.CreateChannelResponseFilterSensitiveLog = CreateChannelResponseFilterSensitiveLog;
const CreateStreamKeyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.streamKey && { streamKey: (0, exports.StreamKeyFilterSensitiveLog)(obj.streamKey) }),
});
exports.CreateStreamKeyResponseFilterSensitiveLog = CreateStreamKeyResponseFilterSensitiveLog;
const GetStreamKeyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.streamKey && { streamKey: (0, exports.StreamKeyFilterSensitiveLog)(obj.streamKey) }),
});
exports.GetStreamKeyResponseFilterSensitiveLog = GetStreamKeyResponseFilterSensitiveLog;
const PutMetadataRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.metadata && { metadata: smithy_client_1.SENSITIVE_STRING }),
});
exports.PutMetadataRequestFilterSensitiveLog = PutMetadataRequestFilterSensitiveLog;
